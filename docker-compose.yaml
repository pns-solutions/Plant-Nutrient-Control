version: "3.3"

#====================#
#      Services      #
#====================#
services:
  #=====================#
  #       WebApp        #
  #=====================#
  webapplication:
    build: ./webapplication
    container_name: webapplication
    restart: unless-stopped
#    command: composer install --ignore-platform-reqs
    ports:
      - "8080:80"
    volumes:
      - webapplicationData:/data
      - ./webapplication:/var/www/html/
    networks:
      - edge

  #=================================#
  #        Sensorcontroller         #
  #=================================#
  sensorcontroller:
    build: ./sensorcontroller
    container_name: sensorcontroller
    restart: unless-stopped
    ports:
      - "49155:80"
    volumes:
      - sensorcontrollerData:/data
      - ./sensorcontroller:/var/www/html/
    networks:
      - edge


  #=====================#
  #    elasticsearch    #
  #=====================#
  elasticsearch:
    build: ./elasticsearch
    image: comworkio/elasticsearch:7.16.1-1.13-arm
    container_name: elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearchData:/var/lib/elasticsearch
    networks:
      - edge

  #=====================#
  #       Grafana       #
  #=====================#
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3030:3000"
    volumes:
      - grafanaData:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - edge



  #=================================#
  #      Mosquitto MQTT Broker      #
  #=================================#
  mosquitto:
    image: eclipse-mosquitto:1.6.15
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "8883:1883"
      - "9001:9001"
    volumes:
      - mosquittoLog:/mosquitto/log
      - mosquittoData:/mosquitto/data
    networks:
      - edge

  #=================================#
  #            Node Red             #
  #=================================#
  nodered:
    build: ./nodered
    image: nodered/node-red:latest
    container_name: nodered
    restart: unless-stopped
    ports:
      - "1880:1880"
    volumes:
      - noderedData:/data
      - ./nodered/dataFaker.json:/data/lib/flows/dataFaker.json
    networks:
      - edge



#====================#
#      Volumnes      #
#====================#
volumes:
  grafanaData:
  noderedData:
  elasticsearchData:
  mosquittoLog:
  mosquittoData:
  webapplicationData:
  sensorcontrollerData:

#====================#
#      Networks      #
#====================#
networks:
  edge:
